{"version":3,"sources":["components/headerComponent/header.js","components/footerComponent/footer.js","components/pages/homePage.js","components/nav/nav.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Footer","Homepage","Nav","window","addEventListener","isTop","scrollY","nav","document","getElementById","classList","add","remove","removeEventListener","this","onScroll","id","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qLAYeA,G,sLARX,OACE,gDACe,yBAAKC,UAAU,c,GAJfC,cCkGNC,E,iLA9FP,OACI,4CAGa,6BAHb,IAIK,6BAJL,IAKK,6BALL,IAMK,6BANL,IAOK,6BAPL,oBAO2B,6BAP3B,IAQK,6BARL,IASK,6BATL,IAUK,6BAVL,oBAU2B,6BAV3B,IAWK,6BAXL,IAYK,6BAZL,IAaK,6BAbL,oBAa2B,6BAb3B,IAcK,6BAdL,IAeK,6BAfL,IAgBK,6BAhBL,oBAgB2B,6BAhB3B,IAiBK,6BAjBL,IAkBK,6BAlBL,IAmBK,6BAnBL,oBAmB2B,6BAnB3B,IAoBK,6BApBL,IAqBK,6BArBL,IAsBK,6BAtBL,oBAsB2B,6BAtB3B,IAuBK,6BAvBL,IAwBK,6BAxBL,IAyBK,6BAzBL,oBAyB2B,6BAzB3B,IA0BK,6BA1BL,IA2BK,6BA3BL,IA4BK,6BA5BL,oBA4B2B,6BA5B3B,IA6BK,6BA7BL,IA8BK,6BA9BL,IA+BK,6BA/BL,oBA+B2B,6BA/B3B,IAgCK,6BAhCL,IAiCK,6BAjCL,IAkCK,6BAlCL,oBAkC2B,6BAlC3B,IAmCK,6BAnCL,IAoCK,6BApCL,IAqCK,6BArCL,oBAqC2B,6BArC3B,IAsCK,6BAtCL,IAuCK,6BAvCL,IAwCK,6BAxCL,oBAwC2B,6BAxC3B,IAyCK,6BAzCL,IA0CK,6BA1CL,IA2CK,6BA3CL,yF,GAHSD,aCWNE,E,iLAVX,OACI,mD,GAHeF,aC4BRG,E,4LA3BXC,OAAOC,iBAAiB,UAAU,WAChC,IAAMC,EAAQF,OAAOG,QAAU,IACzBC,EAAMC,SAASC,eAAe,OAChCJ,EACFE,EAAIG,UAAUC,IAAI,YAElBJ,EAAIG,UAAUE,OAAO,iB,2CAMzBT,OAAOU,oBAAoB,SAAUC,KAAKC,UAAU,K,+BAIpD,OACE,yBAAKC,GAAG,MAAMlB,UAAU,OACtB,yBAAKA,UAAU,YACb,mD,GArBQC,aCyCHkB,E,4LA9BXd,OAAOC,iBAAiB,UAAU,WAChC,IAAMC,EAAQF,OAAOG,QAAU,IACzBC,EAAMC,SAASC,eAAe,OAChCJ,EACFE,EAAIG,UAAUC,IAAI,YAElBJ,EAAIG,UAAUE,OAAO,iB,2CAMzBT,OAAOU,oBAAoB,SAAUC,KAAKC,UAAU,K,+BAIpD,OACE,yBAAKjB,UAAU,OAGb,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA1BUC,aCCEmB,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASf,SAASC,eAAe,SD4H3C,kBAAmBe,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.24ce56ba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        Test Header 2<div className=\"logo\"></div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                        \r\n\r\n                Test Foot<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .<br/>\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n                .\r\n            </footer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Homepage extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            Home page here\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Homepage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Nav extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", () => {\r\n      const isTop = window.scrollY > 100;\r\n      const nav = document.getElementById(\"nav\");\r\n      if (isTop) {\r\n        nav.classList.add(\"scrolled\");\r\n      } else {\r\n        nav.classList.remove(\"scrolled\");\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener(\"scroll\", this.onScroll, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"nav\" className=\"nav\">\r\n        <div className=\"nav_text\">\r\n          <h1>nav component</h1>\r\n       \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\nimport \"./Assets/css/default.min.css\";\n\n//Components\nimport Header from \"./components/headerComponent/header\";\nimport Footer from \"./components/footerComponent/footer\";\nimport Homepage from \"./components/pages/homePage\";\nimport Nav from \"./components/nav/nav\";\n//Includes\nimport \"./Assets/css/default.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    window.addEventListener(\"scroll\", () => {\n      const isTop = window.scrollY > 100;\n      const nav = document.getElementById(\"nav\");\n      if (isTop) {\n        nav.classList.add(\"scrolled\");\n      } else {\n        nav.classList.remove(\"scrolled\");\n      }\n    });\n  }\n\n  componentWillMount() {\n    window.removeEventListener(\"scroll\", this.onScroll, false);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       \n       \n        <Nav/>\n\n        <Header />\n        <Homepage />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}